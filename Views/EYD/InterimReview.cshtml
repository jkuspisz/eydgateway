@model dynamic

@{
    ViewData["Title"] = "Interim Review of Competence Progression";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-clipboard-check text-success me-2"></i>
                        Interim Review of Competence Progression
                    </h2>
                    <p class="text-muted mb-0">Assessment for @Model.UserName</p>
                </div>
                @if (Model.CanUnlock)
                {
                    <div>
                        <i class="fas fa-save"></i> Save Progress
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        </div>
    }

    <!-- Workflow Status -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title mb-3">
                        <i class="fas fa-tasks text-primary me-2"></i>
                        Review Progress
                    </h5>
                    <div class="row">
                        <!-- ES Stage -->
                        <div class="col-md-4">
                            <div class="workflow-stage text-center">
                                <div class="stage-icon">
                                    <i class="fas fa-user-md fa-2x text-primary"></i>
                                </div>
                                <h6>Educational Supervisor</h6>
                                <span class="badge @(Model.ESStatus == "Completed" ? "bg-success" : Model.ESStatus == "InProgress" ? "bg-warning" : "bg-secondary")">
                                    @Model.ESStatus
                                </span>
                            </div>
                        </div>
                        
                        <!-- EYD Stage -->
                        <div class="col-md-4">
                            <div class="workflow-stage text-center">
                                <div class="stage-icon">
                                    <i class="fas fa-user-graduate fa-2x text-info"></i>
                                </div>
                                <h6>Trainee Reflection</h6>
                                <span class="badge @(Model.EYDStatus == "Completed" ? "bg-success" : Model.EYDStatus == "InProgress" ? "bg-warning" : "bg-secondary")">
                                    @Model.EYDStatus
                                </span>
                            </div>
                        </div>
                        
                        <!-- Panel Stage -->
                        <div class="col-md-4">
                            <div class="workflow-stage text-center">
                                <div class="stage-icon">
                                    <i class="fas fa-users fa-2x text-success"></i>
                                </div>
                                <h6>Panel Review</h6>
                                <span class="badge @(Model.PanelStatus == "Completed" ? "bg-success" : Model.PanelStatus == "InProgress" ? "bg-warning" : "bg-secondary")">
                                    @Model.PanelStatus
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content Row for Consistent Width -->
    <div class="row">
        <div class="col-12">
            <!-- Educational Supervisor Section -->
            <div class="card mb-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-user-tie"></i> Educational Supervisor Assessment</h5>
                    <small>Complete EPA entrustment levels and provide justifications</small>
                </div>
                <div class="card-body">
                    @if (Model.CanEditES)
                    {
                        <form asp-action="SaveIRCPSection" method="post" id="es-form">
                            <input type="hidden" name="UserId" value="@Model.UserId" />
                            <input type="hidden" name="Section" value="ES" />
                            
                            <!-- Entrustment Level Guidelines -->
                            <div class="alert alert-info mb-4">
                                <h6 class="alert-heading"><i class="fas fa-info-circle"></i> Entrustment Level Guidelines</h6>
                                <div class="row">
                                    <div class="col-md-3">
                                        <strong>Level 1:</strong> <small>Observation Only - Trainee observes</small>
                                    </div>
                                    <div class="col-md-3">
                                        <strong>Level 2:</strong> <small>Direct Supervision - Supervisor present</small>
                                    </div>
                                    <div class="col-md-3">
                                        <strong>Level 3:</strong> <small>Indirect Supervision - Available when needed</small>
                                    </div>
                                    <div class="col-md-3">
                                        <strong>Level 4:</strong> <small>Independent Practice - Trainee works independently</small>
                                    </div>
                                </div>
                            </div>
            
                            <!-- EPA Assessment Table -->
                            <div class="table-responsive">
                                <table class="table table-bordered ircp-epa-table">
                                    <thead class="table-light">
                                        <tr>
                                            <th rowspan="2" class="epa-column sticky-column">EPA</th>
                                            @foreach (var column in Model.ActivityColumns)
                                            {
                                                <th class="text-center activity-column">
                                                    @column.DisplayName
                                                    <br><small class="text-muted">(@column.TotalCount total)</small>
                                                </th>
                                            }
                                            <th rowspan="2" class="text-center totals-column">Total</th>
                                            <th rowspan="2" class="entrustment-column">Entrustment Level</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var epa in Model.EPAData)
                                        {
                                            <!-- EPA Info Row -->
                                            <tr class="@(epa.Total == 0 ? "table-warning" : "")">
                                                <td class="epa-info sticky-column">
                                                    <div class="epa-info">
                                                        <strong>@epa.Code</strong><br>
                                                        <small>@epa.Title</small>
                                                    </div>
                                                </td>
                                                
                                                @for (int i = 0; i < epa.Activities.Length; i++)
                                                {
                                                    <td class="text-center activity-cell">
                                                        @if (epa.Activities[i] > 0)
                                                        {
                                                            <span class="badge bg-primary">@epa.Activities[i]</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="text-muted">-</span>
                                                        }
                                                    </td>
                                                }
                                                
                                                <td class="text-center totals-cell">
                                                    <strong>@epa.Total</strong>
                                                </td>
                                                
                                                <!-- Entrustment Level -->
                                                <td class="text-center">
                                                    @{
                                                        var savedEntrustmentKey = $"EPA_{epa.Id}_EntrustmentLevel";
                                                        var savedEntrustmentValue = Model.SavedESData.ContainsKey(savedEntrustmentKey) ? Model.SavedESData[savedEntrustmentKey] : "";
                                                    }
                                                    <select class="form-select entrustment-select" name="EPA_@(epa.Id)_EntrustmentLevel">
                                                        <option value="">Select Level</option>
                                                        @if (savedEntrustmentValue == "1")
                                                        {
                                                            <option value="1" selected>Level 1</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="1">Level 1</option>
                                                        }
                                                        @if (savedEntrustmentValue == "2")
                                                        {
                                                            <option value="2" selected>Level 2</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="2">Level 2</option>
                                                        }
                                                        @if (savedEntrustmentValue == "3")
                                                        {
                                                            <option value="3" selected>Level 3</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="3">Level 3</option>
                                                        }
                                                        @if (savedEntrustmentValue == "4")
                                                        {
                                                            <option value="4" selected>Level 4</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="4">Level 4</option>
                                                        }
                                                    </select>
                                                </td>
                                            </tr>
                                            
                                            <!-- Reason and Justification Row -->
                                            <tr class="justification-row">
                                                <td colspan="@(Model.ActivityColumns.Count + 3)" class="p-3">
                                                    <label class="form-label"><strong>Reason and Justification for @epa.Code:</strong></label>
                                                    @{
                                                        var savedJustificationKey = $"EPA_{epa.Id}_Justification";
                                                        var savedJustificationValue = Model.SavedESData.ContainsKey(savedJustificationKey) ? Model.SavedESData[savedJustificationKey] : "";
                                                    }
                                                    <textarea class="form-control" name="EPA_@(epa.Id)_Justification" rows="3" 
                                                              placeholder="Provide reason and justification for this entrustment level...">@savedJustificationValue</textarea>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
            
            <!-- ES Assessment Fields -->
            <div class="row mt-4">
                <div class="col-md-12">
                    <div class="mb-3">
                        <label class="form-label"><strong>Performance to Date</strong></label>
                        @{
                            var savedPerformanceToDate = Model.SavedESData.ContainsKey("PerformanceToDate") ? Model.SavedESData["PerformanceToDate"] : "";
                        }
                        <textarea class="form-control" name="PerformanceToDate" rows="4" 
                                  placeholder="Describe the trainee's performance to date...">@savedPerformanceToDate</textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label"><strong>Progress made since last review</strong></label>
                        @{
                            var savedProgressMade = Model.SavedESData.ContainsKey("ProgressMade") ? Model.SavedESData["ProgressMade"] : "";
                        }
                        <textarea class="form-control" name="ProgressMade" rows="4" 
                                  placeholder="Describe progress made since the last review...">@savedProgressMade</textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label"><strong>Areas of notable practice</strong></label>
                        @{
                            var savedNotablePractice = Model.SavedESData.ContainsKey("NotablePractice") ? Model.SavedESData["NotablePractice"] : "";
                        }
                        <textarea class="form-control" name="NotablePractice" rows="4" 
                                  placeholder="Describe areas of notable practice...">@savedNotablePractice</textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label"><strong>Any performance concerns</strong></label>
                        @{
                            var savedPerformanceConcerns = Model.SavedESData.ContainsKey("PerformanceConcerns") ? Model.SavedESData["PerformanceConcerns"] : "";
                        }
                        <textarea class="form-control" name="PerformanceConcerns" rows="4" 
                                  placeholder="Describe any performance concerns...">@savedPerformanceConcerns</textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label"><strong>Any outstanding development needs</strong></label>
                        @{
                            var savedDevelopmentNeeds = Model.SavedESData.ContainsKey("DevelopmentNeeds") ? Model.SavedESData["DevelopmentNeeds"] : "";
                        }
                        <textarea class="form-control" name="DevelopmentNeeds" rows="4" 
                                  placeholder="Describe any outstanding development needs...">@savedDevelopmentNeeds</textarea>
                    </div>
                    
                    <div class="form-check">
                        @{
                            var savedConfirmation = Model.SavedESData.ContainsKey("ESConfirmation") ? Model.SavedESData["ESConfirmation"] : "";
                            var isConfirmationChecked = savedConfirmation == "true";
                        }
                        @if (isConfirmationChecked)
                        {
                            <input class="form-check-input" type="checkbox" name="ESConfirmation" value="true" id="esConfirmation" checked>
                        }
                        else
                        {
                            <input class="form-check-input" type="checkbox" name="ESConfirmation" value="true" id="esConfirmation">
                        }
                        <label class="form-check-label" for="esConfirmation">
                            <strong>I confirm the above is true about @Model.UserName</strong>
                        </label>
                    </div>
                </div>
            </div>                            <div class="row mt-4">
                                <div class="col-md-12">
                                    <div class="btn-group" role="group">
                                        <button type="submit" name="action" value="save" class="btn btn-outline-primary btn-lg">
                                            <i class="fas fa-save"></i> Save Progress
                                        </button>
                                        <button type="submit" name="action" value="submit" class="btn btn-primary btn-lg">
                                            <i class="fas fa-check-circle"></i> Submit ES Assessment
                                        </button>
                                    </div>
                                    <button type="button" class="btn btn-secondary ms-2">
                                        <i class="fas fa-eye"></i> Preview
                                    </button>
                                    <div class="mt-2">
                                        <small class="text-muted">
                                            <i class="fas fa-info-circle"></i> 
                                            Save to keep your progress. Submit to lock this section and allow EYD reflection.
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </form>
                    }
                    else
                    {
                        <!-- Read-only view of ES Assessment -->
                        <div class="alert alert-warning mb-4">
                            <i class="fas fa-eye"></i> <strong>Read-Only View</strong> - You can view but not edit this section.
                            @if (Model.CanUnlock)
                            {
                                <button type="button" class="btn btn-sm btn-warning ms-2" onclick="unlockSection('ES')">
                                    <i class="fas fa-unlock"></i> Unlock for Editing
                                </button>
                            }
                        </div>

                        <!-- EPA Matrix - Read Only -->
                        <div class="table-responsive">
                            <table class="table table-bordered epa-matrix-table">
                                <thead class="table-dark">
                                    <tr>
                                        <th rowspan="2" class="sticky-column">EPA</th>
                                        <th colspan="@Model.ActivityColumns.Count">Activity Count</th>
                                        <th rowspan="2" class="totals-column">Total</th>
                                        <th rowspan="2" class="entrustment-column">Entrustment Level</th>
                                    </tr>
                                    <tr>
                                        @foreach (var column in Model.ActivityColumns)
                                        {
                                            <th class="activity-header">@column.DisplayName</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var epa in Model.EPAData)
                                    {
                                        <!-- EPA Info Row -->
                                        <tr class="@(epa.Total == 0 ? "table-warning" : "")">
                                            <td class="epa-info sticky-column">
                                                <div class="epa-info">
                                                    <strong>@epa.Code</strong><br>
                                                    <small>@epa.Title</small>
                                                </div>
                                            </td>
                                            
                                            @for (int i = 0; i < epa.Activities.Length; i++)
                                            {
                                                <td class="text-center activity-cell">
                                                    @if (epa.Activities[i] > 0)
                                                    {
                                                        <span class="badge bg-primary">@epa.Activities[i]</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </td>
                                            }
                                            
                                            <td class="text-center totals-cell">
                                                <strong>@epa.Total</strong>
                                            </td>
                                            
                                            <!-- Entrustment Level - Read Only -->
                                            <td class="text-center">
                                                @{
                                                    var savedEntrustmentKey = $"EPA_{epa.Id}_EntrustmentLevel";
                                                    var savedEntrustmentValue = Model.SavedESData.ContainsKey(savedEntrustmentKey) ? Model.SavedESData[savedEntrustmentKey] : "";
                                                }
                                                @if (!string.IsNullOrEmpty(savedEntrustmentValue))
                                                {
                                                    <span class="badge bg-success">Level @savedEntrustmentValue</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not Set</span>
                                                }
                                            </td>
                                        </tr>
                                        
                                        <!-- Reason and Justification Row - Read Only -->
                                        <tr class="justification-row">
                                            <td colspan="@(3 + Model.ActivityColumns.Count)" class="p-3 bg-light">
                                                <label class="form-label"><strong>Reason and Justification for @epa.Code:</strong></label>
                                                @{
                                                    var savedJustificationKey = $"EPA_{epa.Id}_Justification";
                                                    var savedJustificationValue = Model.SavedESData.ContainsKey(savedJustificationKey) ? Model.SavedESData[savedJustificationKey] : "";
                                                }
                                                @if (!string.IsNullOrEmpty(savedJustificationValue))
                                                {
                                                    <div class="border rounded p-2 bg-white">@savedJustificationValue</div>
                                                }
                                                else
                                                {
                                                    <div class="border rounded p-2 bg-white text-muted">No justification provided</div>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- ES Assessment Fields - Read Only -->
                        <div class="row mt-4">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label"><strong>Performance to Date</strong></label>
                                    @{
                                        var savedPerformanceToDate = Model.SavedESData.ContainsKey("PerformanceToDate") ? Model.SavedESData["PerformanceToDate"] : "";
                                    }
                                    @if (!string.IsNullOrEmpty(savedPerformanceToDate))
                                    {
                                        <div class="border rounded p-3 bg-light">@savedPerformanceToDate</div>
                                    }
                                    else
                                    {
                                        <div class="border rounded p-3 bg-light text-muted">Not completed</div>
                                    }
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label"><strong>Progress made since last review</strong></label>
                                    @{
                                        var savedProgressMade = Model.SavedESData.ContainsKey("ProgressMade") ? Model.SavedESData["ProgressMade"] : "";
                                    }
                                    @if (!string.IsNullOrEmpty(savedProgressMade))
                                    {
                                        <div class="border rounded p-3 bg-light">@savedProgressMade</div>
                                    }
                                    else
                                    {
                                        <div class="border rounded p-3 bg-light text-muted">Not completed</div>
                                    }
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label"><strong>Areas of notable practice</strong></label>
                                    @{
                                        var savedNotablePractice = Model.SavedESData.ContainsKey("NotablePractice") ? Model.SavedESData["NotablePractice"] : "";
                                    }
                                    @if (!string.IsNullOrEmpty(savedNotablePractice))
                                    {
                                        <div class="border rounded p-3 bg-light">@savedNotablePractice</div>
                                    }
                                    else
                                    {
                                        <div class="border rounded p-3 bg-light text-muted">Not completed</div>
                                    }
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label"><strong>Any performance concerns</strong></label>
                                    @{
                                        var savedPerformanceConcerns = Model.SavedESData.ContainsKey("PerformanceConcerns") ? Model.SavedESData["PerformanceConcerns"] : "";
                                    }
                                    @if (!string.IsNullOrEmpty(savedPerformanceConcerns))
                                    {
                                        <div class="border rounded p-3 bg-light">@savedPerformanceConcerns</div>
                                    }
                                    else
                                    {
                                        <div class="border rounded p-3 bg-light text-muted">Not completed</div>
                                    }
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label"><strong>Any outstanding development needs</strong></label>
                                    @{
                                        var savedDevelopmentNeeds = Model.SavedESData.ContainsKey("DevelopmentNeeds") ? Model.SavedESData["DevelopmentNeeds"] : "";
                                    }
                                    @if (!string.IsNullOrEmpty(savedDevelopmentNeeds))
                                    {
                                        <div class="border rounded p-3 bg-light">@savedDevelopmentNeeds</div>
                                    }
                                    else
                                    {
                                        <div class="border rounded p-3 bg-light text-muted">Not completed</div>
                                    }
                                </div>
                                
                                <div class="form-check">
                                    @{
                                        var savedConfirmation = Model.SavedESData.ContainsKey("ESConfirmation") ? Model.SavedESData["ESConfirmation"] : "";
                                        var isConfirmationChecked = savedConfirmation == "true";
                                    }
                                    @if (isConfirmationChecked)
                                    {
                                        <span><i class="fas fa-check-circle text-success"></i> <strong>Confirmed by ES:</strong> I confirm the above is true about @Model.UserName</span>
                                    }
                                    else
                                    {
                                        <span><i class="fas fa-times-circle text-muted"></i> <strong>Not confirmed</strong></span>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- EYD Reflection Section -->
            <div class="card mb-4">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0"><i class="fas fa-user-graduate"></i> Trainee Reflection</h5>
                    <small>Reflect on your progress and professional development</small>
                </div>
                <div class="card-body">
                    @if (Model.CanEditEYD)
                    {
                        <form asp-action="SaveIRCPSection" method="post" id="eyd-form">
                            <input type="hidden" name="UserId" value="@Model.UserId" />
                            <input type="hidden" name="Section" value="EYD" />
                            
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group mb-3">
                                        <label class="form-label"><strong>Professional Development Reflection</strong></label>
                                        @{
                                            var savedEYDReflection = Model.SavedEYDData.ContainsKey("ProfessionalReflection") ? Model.SavedEYDData["ProfessionalReflection"] : "";
                                        }
                                        <textarea class="form-control" name="ProfessionalReflection" rows="6" 
                                                  placeholder="Reflect on your professional development, challenges faced, and learning outcomes...">@savedEYDReflection</textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-4">
                                <div class="col-md-12">
                                    <div class="btn-group" role="group">
                                        <button type="submit" name="action" value="save" class="btn btn-outline-primary btn-lg">
                                            <i class="fas fa-save"></i> Save Progress
                                        </button>
                                        <button type="submit" name="action" value="submit" class="btn btn-success btn-lg">
                                            <i class="fas fa-check-circle"></i> Submit Reflection
                                        </button>
                                    </div>
                                    <div class="mt-2">
                                        <small class="text-muted">
                                            <i class="fas fa-info-circle"></i> 
                                            Save to keep your progress. Submit to complete your reflection.
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </form>
                    }
                    else
                    {
                        <!-- Read-only view of EYD Reflection -->
                        <div class="alert alert-warning mb-4">
                            <i class="fas fa-eye"></i> <strong>Read-Only View</strong> - You can view but not edit this section.
                            @if (Model.CanUnlock)
                            {
                                <button type="button" class="btn btn-sm btn-warning ms-2" onclick="unlockSection('EYD')">
                                    <i class="fas fa-unlock"></i> Unlock for Editing
                                </button>
                            }
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group mb-3">
                                    <label class="form-label"><strong>Professional Development Reflection</strong></label>
                                    @{
                                        var savedReflection = Model.SavedEYDData.ContainsKey("ProfessionalReflection") ? Model.SavedEYDData["ProfessionalReflection"] : "";
                                    }
                                    @if (!string.IsNullOrEmpty(savedReflection))
                                    {
                                        <div class="border rounded p-3 bg-light">@savedReflection</div>
                                    }
                                    else
                                    {
                                        <div class="border rounded p-3 bg-light text-muted">Not completed</div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Panel Review Section -->
            <div class="card mb-4">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0"><i class="fas fa-users"></i> Panel Review</h5>
                    <small>Final assessment and recommendations</small>
                </div>
                <div class="card-body">
                    @if (Model.CanEditPanel)
                    {
                        <form asp-action="SaveIRCPSection" method="post" id="panel-form">
                            <input type="hidden" name="UserId" value="@Model.UserId" />
                            <input type="hidden" name="Section" value="Panel" />
                            
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group mb-3">
                                        <label class="form-label"><strong>Panel Decision</strong></label>
                                        @{
                                            var savedPanelDec = Model.SavedPanelData.ContainsKey("PanelDecision") ? Model.SavedPanelData["PanelDecision"] : "";
                                        }
                                        <select class="form-select" name="PanelDecision">
                                            <option value="">Select Decision</option>
                                            @if (savedPanelDec == "Satisfactory")
                                            {
                                                <option value="Satisfactory" selected>Satisfactory Progress</option>
                                            }
                                            else
                                            {
                                                <option value="Satisfactory">Satisfactory Progress</option>
                                            }
                                            @if (savedPanelDec == "NeedsImprovement")
                                            {
                                                <option value="NeedsImprovement" selected>Needs Improvement</option>
                                            }
                                            else
                                            {
                                                <option value="NeedsImprovement">Needs Improvement</option>
                                            }
                                            @if (savedPanelDec == "Unsatisfactory")
                                            {
                                                <option value="Unsatisfactory" selected>Unsatisfactory Progress</option>
                                            }
                                            else
                                            {
                                                <option value="Unsatisfactory">Unsatisfactory Progress</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group mb-3">
                                        <label class="form-label"><strong>Panel Comments</strong></label>
                                        @{
                                            var savedPanelComm = Model.SavedPanelData.ContainsKey("PanelComments") ? Model.SavedPanelData["PanelComments"] : "";
                                        }
                                        <textarea class="form-control" name="PanelComments" rows="6" 
                                                  placeholder="Provide detailed panel assessment and recommendations...">@savedPanelComm</textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-4">
                                <div class="col-md-12">
                                    <div class="btn-group" role="group">
                                        <button type="submit" name="action" value="save" class="btn btn-outline-primary btn-lg">
                                            <i class="fas fa-save"></i> Save Progress
                                        </button>
                                        <button type="submit" name="action" value="submit" class="btn btn-warning btn-lg">
                                            <i class="fas fa-gavel"></i> Finalize Panel Review
                                        </button>
                                    </div>
                                    <div class="mt-2">
                                        <small class="text-muted">
                                            <i class="fas fa-info-circle"></i> 
                                            Save to keep your progress. Submit to finalize the complete IRCP process.
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </form>
                    }
                    else
                    {
                        <!-- Read-only view of Panel Review -->
                        <div class="alert alert-warning mb-4">
                            <i class="fas fa-eye"></i> <strong>Read-Only View</strong> - You can view but not edit this section.
                            @if (Model.CanUnlock)
                            {
                                <button type="button" class="btn btn-sm btn-warning ms-2" onclick="unlockSection('Panel')">
                                    <i class="fas fa-unlock"></i> Unlock for Editing
                                </button>
                            }
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group mb-3">
                                    <label class="form-label"><strong>Panel Decision</strong></label>
                                    @{
                                        var savedPanelDecision = Model.SavedPanelData.ContainsKey("PanelDecision") ? Model.SavedPanelData["PanelDecision"] : "";
                                    }
                                    @if (!string.IsNullOrEmpty(savedPanelDecision))
                                    {
                                        <div class="border rounded p-3 bg-light">
                                            @switch (savedPanelDecision)
                                            {
                                                case "Satisfactory":
                                                    <span class="badge bg-success">Satisfactory Progress</span>
                                                    break;
                                                case "NeedsImprovement":
                                                    <span class="badge bg-warning">Needs Improvement</span>
                                                    break;
                                                case "Unsatisfactory":
                                                    <span class="badge bg-danger">Unsatisfactory Progress</span>
                                                    break;
                                                default:
                                                    <span>@savedPanelDecision</span>
                                                    break;
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="border rounded p-3 bg-light text-muted">No decision made</div>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group mb-3">
                                    <label class="form-label"><strong>Panel Comments</strong></label>
                                    @{
                                        var savedPanelComments = Model.SavedPanelData.ContainsKey("PanelComments") ? Model.SavedPanelData["PanelComments"] : "";
                                    }
                                    @if (!string.IsNullOrEmpty(savedPanelComments))
                                    {
                                        <div class="border rounded p-3 bg-light">@savedPanelComments</div>
                                    }
                                    else
                                    {
                                        <div class="border rounded p-3 bg-light text-muted">No comments provided</div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
    </div>
</div>

<style>
.ircp-epa-table {
    font-size: 0.9rem;
}

.epa-row:hover {
    background-color: #f8f9fa;
}

.epa-info strong {
    color: #0d6efd;
}

.entrustment-select {
    min-width: 150px;
}

.entrustment-select:focus {
    border-color: #0d6efd;
    box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
}

.progress {
    height: 25px;
}

.opacity-50 {
    opacity: 0.5;
}

.opacity-25 {
    opacity: 0.25;
}

.workflow-stage {
    padding: 1rem;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.workflow-stage:hover {
    background-color: #f8f9fa;
}

.stage-icon {
    margin-bottom: 0.5rem;
}

.workflow-stage .badge {
    font-size: 0.8rem;
    padding: 0.4rem 0.8rem;
}

.btn-group {
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.btn-group .btn {
    border-radius: 0;
}

.btn-group .btn:first-child {
    border-top-left-radius: 0.375rem;
    border-bottom-left-radius: 0.375rem;
}

.btn-group .btn:last-child {
    border-top-right-radius: 0.375rem;
    border-bottom-right-radius: 0.375rem;
}
</style>

@section Scripts {
<script>
// Add interactivity for the entrustment selects
document.addEventListener('DOMContentLoaded', function() {
    const entrustmentSelects = document.querySelectorAll('.entrustment-select');
    
    entrustmentSelects.forEach(select => {
        select.addEventListener('change', function() {
            const row = this.closest('tr');
            const textArea = row.querySelector('textarea');
            
            if (this.value) {
                // Highlight the row when an entrustment level is selected
                row.classList.add('table-success');
                row.classList.remove('table-warning');
                
                // Enable and focus the justification textarea
                textArea.disabled = false;
                textArea.focus();
            } else {
                row.classList.remove('table-success');
                textArea.disabled = true;
            }
        });
    });
});

// Unlock section functionality
function unlockSection(section) {
    if (confirm(`Are you sure you want to unlock the ${section} section for editing? This will allow the user to modify their submission.`)) {
        // Here you would make an AJAX call to unlock the section
        // For now, just show a message
        alert(`${section} section unlocked for editing.`);
        location.reload();
    }
}
</script>
}
